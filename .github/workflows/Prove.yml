name: Prove blocks
on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
    prepare:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - id: variables
              run: |
                LATEST_RANGE_FILE=$( ls assets/proofs/* | sort -r | head -n 1 )
                LATEST_PROVED_BLOCK=$( jq 'keys|last|tonumber? // .' $LATEST_RANGE_FILE )
                TIP=$( curl -H "project_id: ${{secrets.BLOCKFROST_API_KEY}}" https://cardano-preprod.blockfrost.io/api/v0/blocks/latest | jq -r '.height' )
                
                BLOCK_SAMPLING=100 # Create proofs for every BLOCK_SAMPLING blocks
                BLOCK_TO_PROVE=$(( $TIP - ( $TIP % $BLOCK_SAMPLING ) ))
                BLOCK_TO_PROVE_SLOT=$( curl -H "project_id: ${{secrets.BLOCKFROST_API_KEY}}" https://cardano-preprod.blockfrost.io/api/v0/blocks/${BLOCK_TO_PROVE} | jq -r '.slot' )
                BLOCK_TO_PROVE_HASH=$( curl -H "project_id: ${{secrets.BLOCKFROST_API_KEY}}" https://cardano-preprod.blockfrost.io/api/v0/blocks/${BLOCK_TO_PROVE} | jq -r '.hash' )
                BLOCKS_PER_RANGE=100 # Range files contain BLOCKS_PER_RANGE non-continuous blocks
                BATCH=$(( $TIP - ( $TIP % ( $BLOCKS_PER_RANGE * $BLOCK_SAMPLING ) ) ))
                echo $BLOCK_TO_PROVE_HASH
                echo $BLOCK_TO_PROVE_CBOR
                echo "batch=${BATCH}" >> "$GITHUB_OUTPUT"
                echo "blocks=[{\"slot\":${BLOCK_TO_PROVE_SLOT},\"hash\":\"${BLOCK_TO_PROVE_HASH}\"}]" >> "$GITHUB_OUTPUT"
        outputs:
            batch: ${{ steps.variables.outputs.batch }}
            blocks: ${{ steps.variables.outputs.blocks }}

    prove:
        runs-on: ubuntu-latest
        needs: prepare
        strategy:
            matrix:
                prover: [risc0]
                block: ${{ fromJson(needs.prepare.outputs.blocks) }}
        defaults:
            run:
                working-directory: provers/${{ matrix.prover }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - run: rustup toolchain install stable --profile minimal

            - uses: Swatinem/rust-cache@v2
              with:
                workspaces: provers/${{ matrix.prover }} -> provers/${{ matrix.prover }}/target

            - name: Setup
              run: make setup
              shell: bash

            - name: Prove
              run: |
                export BLOCK_SLOT=${{ matrix.block.slot }}
                export BLOCK_HASH=${{ matrix.block.hash }}
                RESULT=`make prove`
                FILE="../../assets/proofs/${{needs.prepare.outputs.batch}}.json"

                # Make sure we work on uptodate files
                git pull

                # Create an empty JSON file the first time
                mkdir -p $(dirname ${FILE}) 
                echo "{}" > ${FILE}
                ln -sf ${FILE} ../../assets/proofs/latest.json

                # Update the JSON with new proof
                cat <<< $(jq --arg result ${RESULT} '."${{ matrix.block }}".proofs.${{ matrix.prover }}+=$result' ${FILE}) > ${FILE}
              shell: bash

            - name: Commit changes
              env: 
                CI_COMMIT_MESSAGE: "chore: added proof for block ${{ matrix.block }} in batch ${{ needs.prepare.outputs.batch }} for ${{ matrix.prover }}"
                CI_COMMIT_AUTHOR: Continuous Proving
              run: |
                git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
                git config --global user.email "jeluard@users.noreply.github.com"
                git add ../../assets/proofs/*
                git diff-index --quiet HEAD || git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
                git push