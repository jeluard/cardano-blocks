name: Prove blocks
on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
    prepare:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - id: variables
              run: |
                LATEST_RANGE_FILE=$( ls assets/proofs | sort -r | head -n 1 | cut -d'.' -f1  )
                LATEST_BLOCK=$( jq 'keys|last|tonumber' $LATEST_RANGE_FILE )
                BLOCK=$( curl -H "project_id: ${{secrets.BLOCKFROST_API_KEY}}" https://cardano-preprod.blockfrost.io/api/v0/blocks/latest | jq -r '.height' )

                BATCH=$(( $BLOCK-$BLOCK%100 ))
                #BLOCK_COUNT=$( $TIP > b ? $TIP : b )

                echo $LATEST_RANGE_FILE
                echo $LATEST_BLOCK
                echo $BLOCK
                echo $BATCH

                echo "batch=${BATCH}" >> "$GITHUB_OUTPUT"
                echo "block=${BLOCK}" >> "$GITHUB_OUTPUT"
                echo "blocks=[${BLOCK}]" >> "$GITHUB_OUTPUT"
        outputs:
            batch: ${{ steps.variables.outputs.batch }}
            block: ${{ steps.variables.outputs.block }}
            blocks: ${{ steps.variables.outputs.blocks }}

    prove:
        runs-on: ubuntu-latest
        needs: prepare
        strategy:
            matrix:
                prover: [risc0]
                block: ${{ fromJson(needs.prepare.outputs.blocks) }}
        defaults:
            run:
                working-directory: provers/${{ matrix.prover }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - run: rustup toolchain install stable --profile minimal

            - uses: Swatinem/rust-cache@v2

            - name: Setup
              run: make setup
              shell: bash

            - name: Prove
              run: |
                export RAW_BLOCK=$(curl -H "project_id: ${{secrets.BLOCKFROST_API_KEY}}" "https://cardano-preprod.blockfrost.io/api/v0/blocks/${{ needs.prepare.outputs.block }}/cbor" | jq -r '.cbor')
                RESULT=`make prove`
                FILE="assets/proofs/${{needs.prepare.outputs.batch}}.json"
                
                cat <<< $(jq '."${{ needs.prepare.outputs.block }}".proofs.risc0="${RESULT}"' ${FILE}) > ${FILE}
              shell: bash